<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the player's stats
xp = 0;
maxxp = 10;
level = 1;
attack = 1;
money = 0;
draw_set_colour(c_white);

// Players xstart and ystart
if (instance_exists(obj_player)){
    player_xstart = obj_player.x;
    player_ystart = obj_player.y;
} else {
    player_xstart = 0;
    player_ystart = 0;
}

// Save previous room
previous_room = room;
room_start_action = NEW_ROOM;

// Quests


// Quest 1
global.quest1= false;
global.questmeet = false;
global.quest1finished = false;

//Quest 2
global.quest2 = false;
global.questmomentum = false;
global.quest2finished = false;

// Quest 3
global.quest3 = false;
hands = 0;
global.questhands = false;
global.quest3finished = false;

// Quest 4
global.quest4 = false;
global.questdonations = false;
global.quest4finished = false;

// Quest 5
global.quest5 = false;
global.questbook = false;
global.quest5finished = false;

// Quest 6
global.quest6 = false;
sickle = 0;
global.questsickle = false;
global.quest6finished = false;

// Quest 7
global.quest7 = false;
global.questpaper = false;
global.quest7finished = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// pause the game
if (obj_input.pause_key) {
    if (room != rm_pause) {
        if (instance_exists(obj_player)) {
            obj_player.persistent = false;
        }
        previous_room = room;
        room_persistent = true;
        room_goto(rm_pause);
    } else {
        room_goto(previous_room);
    }
    obj_input.pause_key = false;
}

// Experience clamp
if (maxxp &lt; xp) {
    xp = 0;
    level += 1;
    maxxp *= 2;
}
xp = clamp(xp, 0, maxxp);

if (attack &gt;= 3) {
    global.questmomentum = true
}

/*
if (hands &gt;= 5) {
    global.questhands = true
}

if (sickle &gt;= 12) {
    global.questsickle = true
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Players start position
if (room == rm_pause) exit;

switch (room_start_action) {
    case RETURN:
        break;
        
    case NEW_ROOM:
    default:
        if (instance_exists(obj_player)){
            player_xstart = obj_player.x;
            player_ystart = obj_player.y;
        }
        break;
        
    case LOAD:
        scr_load_game();
        break;
}

room_persistent = false;
room_start_action = NEW_ROOM;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the stats
draw_rectangle_color(x,y+35,x+100,y+45,c_black,c_black, c_black, c_black, false);
draw_rectangle_color(x,y+35,x + (xp / maxxp * 100), y+45, c_aqua, c_aqua, c_aqua, c_aqua, false);
draw_text_transformed(50,82, string(xp) + "/" + string(maxxp),0.8,0.8,0);
draw_text_transformed(15,60, "Level: " + string(level), 1, 1, 0);
//draw_text_transformed(15,100, "Money: " + "$"+string(money), 1, 1, 0);
//draw_text_transformed(15,125, "Strength: " + string(attack), 1, 1, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
